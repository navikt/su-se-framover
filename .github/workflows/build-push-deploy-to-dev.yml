name: build-push-deploy-to-dev.yml

on:
  push:
  workflow_dispatch:

jobs:
  build-push-docker-image:
    name: build-push-docker-image
    runs-on: ubuntu-latest
    env:
      image: ghcr.io/${{ github.repository }}/${{ github.workflow }}:${{ github.sha }}
    outputs:
      image: ${{ env.image }}
    permissions:
      packages: 'write'
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.6.0
        with:
            node-version: '18.x'
      - name: install-deps-client
        run: npm ci
      - name: lint-and-typecheck
        run: npm run lint-and-typecheck
      - name: build-client
        run: npm run build
      - name: install-deps-server
        working-directory: server
        run: npm ci
      - name: build-server
        working-directory: server
        run: npm run build
      - name: create-sentry-release
        if: (github.ref == 'refs/heads/master') || (github.event_name == 'workflow_dispatch')
        run: npm run sentry-release
        env:
            SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
      - name: docker-login
        if: (github.ref == 'refs/heads/master') || (github.event_name == 'workflow_dispatch')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: docker-build-push
        if: (github.ref == 'refs/heads/master') || (github.event_name == 'workflow_dispatch')
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ env.image }}

  deploy-to-dev-fss:
    if: (github.ref == 'refs/heads/master') || (github.event_name == 'workflow_dispatch')
    name: deploy-to-dev-fss
    needs: build-push-docker-image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais.yml
          VAR: image=${{ needs.build.outputs.image }}
          VARS: nais-dev.json

  generate-draft-release:
    if: (github.ref == 'refs/heads/master')
    name: Generate/update draft release
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        #with:
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # config-name: my-config.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
